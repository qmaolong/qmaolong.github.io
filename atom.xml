<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nick61ba&#39;s</title>
  
  <subtitle>记录本身 即已是反抗</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="qmaolong.cn/"/>
  <updated>2021-06-23T03:36:33.539Z</updated>
  <id>qmaolong.cn/</id>
  
  <author>
    <name>邱茂龙</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>语录</title>
    <link href="qmaolong.cn/2020/1120-%E8%AF%AD%E5%BD%95201120/"/>
    <id>qmaolong.cn/2020/1120-语录201120/</id>
    <published>2020-11-20T01:35:17.000Z</published>
    <updated>2021-06-23T03:36:33.539Z</updated>
    
    <content type="html"><![CDATA[<p>所有的知识都应该成为一扇门，而不是摆件。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;所有的知识都应该成为一扇门，而不是摆件。&lt;/p&gt;

      
    
    </summary>
    
      <category term="语录" scheme="qmaolong.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
      <category term="随想" scheme="qmaolong.cn/tags/%E9%9A%8F%E6%83%B3/"/>
    
      <category term="语录" scheme="qmaolong.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>推荐——《精进：如何成为一个很厉害的人》</title>
    <link href="qmaolong.cn/2020/0302-%E6%8E%A8%E8%8D%90%E2%80%94%E2%80%94%E3%80%8A%E7%B2%BE%E8%BF%9B%EF%BC%9A%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%BE%88%E5%8E%89%E5%AE%B3%E7%9A%84%E4%BA%BA%E3%80%8B/"/>
    <id>qmaolong.cn/2020/0302-推荐——《精进：如何成为一个很厉害的人》/</id>
    <published>2020-03-02T02:04:22.000Z</published>
    <updated>2021-06-23T03:36:33.537Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/202003/jingjin.png" alt="区块链概览"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/202003/jingjin.png&quot; alt=&quot;区块链概览&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="书籍" scheme="qmaolong.cn/categories/%E4%B9%A6%E7%B1%8D/"/>
    
    
      <category term="精进" scheme="qmaolong.cn/tags/%E7%B2%BE%E8%BF%9B/"/>
    
  </entry>
  
  <entry>
    <title>区块链概览</title>
    <link href="qmaolong.cn/2020/0224-%E5%8C%BA%E5%9D%97%E9%93%BE%E6%A6%82%E8%A7%88/"/>
    <id>qmaolong.cn/2020/0224-区块链概览/</id>
    <published>2020-02-24T06:04:22.000Z</published>
    <updated>2021-06-23T03:36:33.537Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/202002/qukuailian.png" alt="区块链概览"></p><h3 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h3><p>区块链技术是基于去中心化的对等网络，用开源软件把密码学原理、时序数据和共识机制相结合，来保障分布式数据库中各节点的连贯和持续，使信息能即时验证、可追溯，但难以篡改和无法屏蔽，从而创造了一套隐私、高效、安全的共享价值体系。</p><h4 id="起源："><a href="#起源：" class="headerlink" title="起源："></a>起源：</h4><p>2008年一个网名叫“中本聪”的人发表了一篇名为《比特币：一个点对点的电子现金系统》的论文。</p><h4 id="多个角度看待区块链："><a href="#多个角度看待区块链：" class="headerlink" title="多个角度看待区块链："></a>多个角度看待区块链：</h4><p>目前区块链已经成为一个独立的技术名词，而不是依赖于某个具体产品的附属技术。区块链这个技术名词，从不同的角度看会有不同的解释。</p><ul><li>从网络的角度看：区块链的底层网络模型提供了分布式数据存储的完美实现，比特币系统从诞生至今没有发生过一次宕机事件，这有利地证明了该网络模型的稳定和高效。</li><li>从底层技术的角度看：区块链更像是一个数据结构，用区块存储数据，把区块按照顺序链接起来组成区块链，从而达到防止数据被篡改的目的。</li><li>从密码学的角度看：区块链利用椭圆曲线数字签名算法来保证数据的完整性和真实性。</li><li>从数据存储的角度看：区块链更像是一个分布式数据库，不但数据的存储是分布式的（以共享账本为例，所有的数据可以对等地存储在所有参与数据记录的节点中，而非集中存储于中心化的机构节点中），而且数据的产生也是分布式的（账本所有的节点集体维护，而非一个单独的中心机构来维护）。</li></ul><h4 id="区块链技术栈包含了以下技术特性："><a href="#区块链技术栈包含了以下技术特性：" class="headerlink" title="区块链技术栈包含了以下技术特性："></a>区块链技术栈包含了以下技术特性：</h4><ul><li>分布式数据库：传统关系型数据库ACID原则（原子性、一致性、隔离性、持久性）-&gt;分布式BASE原则（基本上可用、 软状态、 最终一致性）</li><li>密码学特性：哈希算法、Merkle树、非对称加密算法</li><li>共识机制：PWO（工作量证明）、POS（股权证明机制）、DPOS（授权股权证明）、PBFT（拜占庭共识算法）</li><li>智能合约：智能合约本质上就是一段用某种计算编程语言编写的程序，这段程序可以运行在区块链系统提供的容器中，同时这段程序也可以在某种外在、内在条件的激活下自动运行。</li></ul><h4 id="演进过程："><a href="#演进过程：" class="headerlink" title="演进过程："></a>演进过程：</h4><ul><li>区块链1.0仅仅是一个共享账本，只能记账而没有其他功能。</li><li>区块链2.0在共享账本的基础上增加了智能合约，通过智能合约可以提供更加丰富的功能。</li><li>区块链3.0进一步升级，不但能够记录交易还能记录状态，对数据进行溯源，使区块链技术不再局限于数字货币，而是应用在更多的行业场景中。</li></ul><h4 id="3个缺点："><a href="#3个缺点：" class="headerlink" title="3个缺点："></a>3个缺点：</h4><ul><li>性能问题</li><li>数据的弹性扩展问题</li><li>易用性问题</li></ul><h4 id="4个错误认识："><a href="#4个错误认识：" class="headerlink" title="4个错误认识："></a>4个错误认识：</h4><ul><li>区块链就是数字货币</li><li>区块链将取代传统的数据库</li><li>区块链系统是否一定要挖矿</li><li>区块链只能用来记账</li></ul><h4 id="应用领域："><a href="#应用领域：" class="headerlink" title="应用领域："></a>应用领域：</h4><ul><li>金融行业</li><li>供应链</li><li>公证领域</li><li>数字版权领域</li><li>保险行业</li><li>公益慈善领域</li><li>智能制造</li><li>教育就业</li></ul><h4 id="常见技术框架："><a href="#常见技术框架：" class="headerlink" title="常见技术框架："></a>常见技术框架：</h4><ul><li>比特币</li><li>以太坊</li><li>超级账本</li><li><p>CordaCorda、BigChainDB</p><h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><blockquote><p>区块链开发实战：Hyperledger Fabric关键技术与案例分析 冯翔 机械工业出版社</p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/202002/qukuailian.png&quot; alt=&quot;区块链概览&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;定义：&quot;&gt;&lt;a href=&quot;#定义：&quot; class=&quot;headerlink&quot; title=&quot;定义：&quot;&gt;&lt;/a&gt;定义：&lt;/h3&gt;&lt;p&gt;区块链技术
      
    
    </summary>
    
      <category term="技术" scheme="qmaolong.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="区块链" scheme="qmaolong.cn/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>一种用Java截取图片并矫正的算法</title>
    <link href="qmaolong.cn/2019/0526-%E7%94%A8JAVA%E6%88%AA%E5%8F%96%E5%9B%BE%E7%89%87%E5%B9%B6%E7%9F%AB%E6%AD%A3%E7%9A%84%E7%AE%97%E6%B3%95/"/>
    <id>qmaolong.cn/2019/0526-用JAVA截取图片并矫正的算法/</id>
    <published>2019-05-26T09:08:17.000Z</published>
    <updated>2021-06-23T03:36:33.538Z</updated>
    
    <content type="html"><![CDATA[<p>最近手头的项目遇到一个需求，要从一张图片中识别出身份证并且截取出来，生成一张与真实的身份证1:1大小的图片。开始我们找了几家第三方的解决方案，根据图片直接返回识别并还原的图片，但是效果并不理想，唯一一家识别效果好的平台，只返回图片中身份证4个角的像素坐标，所以裁剪和还原的任务就需要我们自己去解决。</p><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><p>已知图片中的4个像素坐标，将身份证截取出来，拉伸还原成正常比例，如下图：<br><img src="/images/20190526/1.png" alt="任务"></p><h4 id="难题"><a href="#难题" class="headerlink" title="难题"></a>难题</h4><p>由于图片的拍摄角度各有不同，身份证的形状也是多种多样，算法需要适用从不同角度下拍摄的照片。</p><h4 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h4><p><img src="/images/20190526/2.png" alt="过程"></p><p>已知ABCD4个点的坐标分别为： (a1, a2), (b1, b2), (c1, c2), (d1, d2)</p><p>步骤一：新建一张画布，身份证的真实比例是 长度8.56cm×宽度5.4cm，所以我们新建一张856*540像素的画布：</p><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BufferedImage nImg = <span class="keyword">new</span> BufferedImage(<span class="number">856</span>, <span class="number">540</span>, <span class="class"><span class="keyword">type</span>);</span></span><br></pre></td></tr></table></figure><p>步骤二：得到一张空白画布后，我们试着用二分法先填充画布中线的像素，如下图，将EF线排列到GH线上</p><p><img src="/images/20190526/3.png" alt="二分法递归"></p><p>已知ABCD四个点的坐标，我们可以得出AC线与BD线的方程式，可以得到E和F的坐标(e1,e2)，(f1,f2)：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//计算左线中点</span></span><br><span class="line">double y<span class="number">1</span> = middleY * <span class="comment">(ldy - luy)</span> / im<span class="name">g2.</span>getHeight<span class="comment">()</span> + luy;</span><br><span class="line">double x<span class="number">1</span> = <span class="comment">(y1 - luy)</span> * <span class="comment">(ldx - lux)</span> / <span class="comment">(ldy - luy)</span> + lux;</span><br><span class="line"><span class="comment">//计算右线中点</span></span><br><span class="line">double y<span class="number">2</span> = middleY * <span class="comment">(rdy - ruy)</span> / im<span class="name">g2.</span>getHeight<span class="comment">()</span> + ruy;</span><br><span class="line">double x<span class="number">2</span> = <span class="comment">(y2 - ruy)</span> * <span class="comment">(rdx - rux)</span> / <span class="comment">(rdy - ruy)</span> + rux;</span><br></pre></td></tr></table></figure><p>从左到右遍历G到H的像素，根据比例获取EF线上的像素点，填充到GH线的像素上，由于GH的长度与EF的长度不同，所以不能一个像素对应一个像素依次排列，需要根据比例来获取像素，虽然会产生一个旧的像素填充到多个新的像素上导致的微量模糊，但这也是拉伸的过程中不可避免的。</p><p>填充完GH线之后，使用递归的思想，将ABEF填充到新图，以此类推，最终每一行的像素得以填充，算法结束。</p><p>我将整个过程封装成了一个JAVA类，有需要的可以直接拷贝使用。</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.<span class="built_in">image</span>.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @Author qiumaolong</span></span><br><span class="line"><span class="comment">* @Date 2019/5/22 14:38</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> class ImageCorrection &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 原文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> originalFile;</span><br><span class="line">    BufferedImage <span class="built_in">image</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 左上角坐标</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> lux ;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> luy;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 右上角坐标</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> rux;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> ruy;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 左下角坐标</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> ldx;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> ldy;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 右下角坐标</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> rdx;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> rdy;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 目标图片规格</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> <span class="built_in">width</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> <span class="built_in">height</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ImageCorrection(<span class="keyword">String</span> originalFile) &#123;</span><br><span class="line">        <span class="keyword">this</span>.originalFile = originalFile;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="built_in">image</span> = ImageIO.read(<span class="keyword">new</span> File(originalFile));</span><br><span class="line">            lux = <span class="number">0</span>;</span><br><span class="line">            luy = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            rux = <span class="built_in">image</span>.getWidth();</span><br><span class="line">            ruy = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            ldx = <span class="number">0</span>;</span><br><span class="line">            ldy = <span class="built_in">image</span>.getHeight();</span><br><span class="line"></span><br><span class="line">            rdx = <span class="built_in">image</span>.getWidth();</span><br><span class="line">            rdy = <span class="built_in">image</span>.getHeight();</span><br><span class="line"></span><br><span class="line">            <span class="built_in">width</span> = <span class="built_in">image</span>.getWidth();</span><br><span class="line">            <span class="built_in">height</span> = <span class="built_in">image</span>.getHeight();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"读取图片失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> setRange(<span class="keyword">double</span> lux, <span class="keyword">double</span> luy, <span class="keyword">double</span> rux, <span class="keyword">double</span> ruy, <span class="keyword">double</span> ldx, <span class="keyword">double</span> ldy, <span class="keyword">double</span> rdx, <span class="keyword">double</span> rdy)&#123;</span><br><span class="line">        <span class="keyword">this</span>.lux = lux;</span><br><span class="line">        <span class="keyword">this</span>.luy = luy;</span><br><span class="line">        <span class="keyword">this</span>.rux = rux;</span><br><span class="line">        <span class="keyword">this</span>.ruy = ruy;</span><br><span class="line">        <span class="keyword">this</span>.ldx = ldx;</span><br><span class="line">        <span class="keyword">this</span>.ldy = ldy;</span><br><span class="line">        <span class="keyword">this</span>.rdx = rdx;</span><br><span class="line">        <span class="keyword">this</span>.rdy = rdy;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> setTargetImgSize(<span class="built_in">int</span> <span class="built_in">width</span>, <span class="built_in">int</span> <span class="built_in">height</span>)&#123;</span><br><span class="line">        <span class="keyword">this</span>.<span class="built_in">width</span> = <span class="built_in">width</span>;</span><br><span class="line">        <span class="keyword">this</span>.<span class="built_in">height</span> = <span class="built_in">height</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> action(<span class="keyword">String</span> fileSavePath)&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            File file = <span class="keyword">new</span> File(fileSavePath);</span><br><span class="line">            action(<span class="keyword">new</span> FileOutputStream(file));</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception fe)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"图片保存失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> action(OutputStream os)&#123;</span><br><span class="line">        BufferedImage nImg = <span class="keyword">new</span> BufferedImage(<span class="built_in">width</span>, <span class="built_in">height</span>, <span class="built_in">image</span>.getType());</span><br><span class="line">        fillingPixel(<span class="built_in">image</span>, nImg, <span class="number">0</span>, <span class="built_in">height</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ImageIO.write(nImg, <span class="string">"jpg"</span>, os);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"图片保存失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="built_in">splice</span>(OutputStream os) &#123;</span><br><span class="line">        <span class="comment">//截取图像</span></span><br><span class="line">        BufferedImage image1 = <span class="keyword">new</span> BufferedImage(<span class="built_in">image</span>.getWidth(), <span class="built_in">image</span>.getHeight(), <span class="built_in">image</span>.getType());</span><br><span class="line">        Graphics2D g2 = image1.<span class="built_in">createGraphics</span>();</span><br><span class="line">        image1 = g2.getDeviceConfiguration().createCompatibleImage(<span class="built_in">image</span>.getWidth(), <span class="built_in">image</span>.getHeight(), Transparency.TRANSLUCENT);</span><br><span class="line">        g2.dispose();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; image1.getWidth(); i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; image1.getHeight(); j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!ifWithinRange(i, j))&#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                image1.setRGB(i, j, <span class="built_in">image</span>.getRGB(i, j));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ImageIO.write(image1, <span class="string">"jpg"</span>, os);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"图片保存失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将不规则img1像素填充到规则的img2中</span></span><br><span class="line"><span class="comment">     * 用二分线不断递归填充实现最终结果</span></span><br><span class="line"><span class="comment">     * @param img1</span></span><br><span class="line"><span class="comment">     * @param img2</span></span><br><span class="line"><span class="comment">     * @param minY</span></span><br><span class="line"><span class="comment">     * @param maxY</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> fillingPixel(BufferedImage img1, BufferedImage img2, <span class="built_in">int</span> minY, <span class="built_in">int</span> maxY)&#123;</span><br><span class="line">        <span class="keyword">if</span> (minY == maxY || minY == maxY - <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">int</span> middleY = (minY + maxY) / <span class="number">2</span>;</span><br><span class="line">        <span class="comment">//计算左线中点</span></span><br><span class="line">        <span class="keyword">double</span> y1 = middleY * (ldy - luy) / img2.getHeight() + luy;</span><br><span class="line">        <span class="keyword">double</span> x1 = (y1 - luy) * (ldx - lux) / (ldy - luy) + lux;</span><br><span class="line">        <span class="comment">//计算右线中点</span></span><br><span class="line">        <span class="keyword">double</span> y2 = middleY * (rdy - ruy) / img2.getHeight() + ruy;</span><br><span class="line">        <span class="keyword">double</span> x2 = (y2 - ruy) * (rdx - rux) / (rdy - ruy) + rux;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i=<span class="number">0</span>; i&lt; img2.getWidth(); i++)&#123;</span><br><span class="line">            <span class="built_in">int</span> x = <span class="keyword">new</span> Double(i * (x2 - x1) / img2.getWidth() + x1).intValue();</span><br><span class="line">            <span class="built_in">int</span> y = <span class="keyword">new</span> Double((x - x1) * (y2 - y1) / (x2 - x1) + y1).intValue();</span><br><span class="line">            img2.setRGB(i, middleY, img1.getRGB(x, y));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fillingPixel(img1, img2, minY, middleY);</span><br><span class="line">        fillingPixel(img1, img2, middleY, maxY);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">boolean</span> ifWithinRange(<span class="built_in">int</span> x, <span class="built_in">int</span> y)&#123;</span><br><span class="line">        <span class="keyword">double</span> n = <span class="number">0.0</span>;</span><br><span class="line">        <span class="comment">//是否在左线右边</span></span><br><span class="line">        n = (y - ldy)*(lux -ldx)/(luy - ldy) + ldx;</span><br><span class="line">        <span class="keyword">if</span> (x &lt; n)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//是否在右线左边</span></span><br><span class="line">        n = (y - ruy) * (rdx - rux) / (rdy - ruy) + rux;</span><br><span class="line">        <span class="keyword">if</span> (x &gt; n)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//是否在上线下边</span></span><br><span class="line">        n = luy + (ruy - luy)/(rux - lux)*(x - lux);</span><br><span class="line">        <span class="keyword">if</span> (y &lt; n)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//是否在下线上边</span></span><br><span class="line">        <span class="keyword">if</span> (y &gt; ldy + ((rdy - ldy) / (rdx - ldx) * (x - ldx)))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近手头的项目遇到一个需求，要从一张图片中识别出身份证并且截取出来，生成一张与真实的身份证1:1大小的图片。开始我们找了几家第三方的解决方案，根据图片直接返回识别并还原的图片，但是效果并不理想，唯一一家识别效果好的平台，只返回图片中身份证4个角的像素坐标，所以裁剪和还原的任
      
    
    </summary>
    
      <category term="技术" scheme="qmaolong.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="算法" scheme="qmaolong.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="JAVA" scheme="qmaolong.cn/tags/JAVA/"/>
    
      <category term="图像处理" scheme="qmaolong.cn/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>《调音师》——只有兔子的故事是捏造的吗？</title>
    <link href="qmaolong.cn/2019/0523-%E3%80%8A%E8%B0%83%E9%9F%B3%E5%B8%88%E3%80%8B-%E5%8F%AA%E6%9C%89%E5%85%94%E5%AD%90%E7%9A%84%E6%95%85%E4%BA%8B%E6%98%AF%E6%8D%8F%E9%80%A0%E7%9A%84%E5%90%97%EF%BC%9F/"/>
    <id>qmaolong.cn/2019/0523-《调音师》-只有兔子的故事是捏造的吗？/</id>
    <published>2019-05-23T10:03:55.000Z</published>
    <updated>2021-06-23T03:36:33.536Z</updated>
    
    <content type="html"><![CDATA[<p>中国观众对于印度电影的接受程度，大部分限于励志类型的电影，它们大多数都是反映社会现状并且不断为之反抗并且获得胜利的故事，《三个傻瓜》战胜了体制化的教育，《摔跤吧爸爸》实现了被限制的女性个人价值，《厕所英雄》解放了被压抑的女性膀胱。《调音师》区别于一贯的中国观众对于印度电影的认知，作为一部悬疑剧情片打入中国观众的视线并且获得了很高的评价。</p><p>故事改编自法国的短片，讲述了男主是一名钢琴师，为了提高对于艺术的注意力和获得特殊的社会待遇假装成盲是人，意外结识了酒馆女后进到酒馆女父亲的酒馆弹琴，由于专业的音乐水准x，钢琴师不仅获得了酒馆女的放心，也引起了酒馆客人过气老影星的注意。 老影星邀请钢琴师在第二天与妻子的结婚纪念日上门为妻子演奏钢琴，钢琴师欣然前往却不料以盲人的身份目睹了老影星的被杀现场，惊慌的钢琴师为保自身的安全只好继续装作盲人。期间，钢琴师用及其冷静的头脑和精湛的演技躲过一次次的危机，也最终没有躲过毒手成了真正的盲人。</p><p>影片的一开始，就展现了一段菜农打兔子的故事，与故事最后首尾呼应，意味深长。</p><p>钢琴师最终在法国遇到酒馆女，在陈述完整个故事离开时打飞的易拉罐让人不难猜到，钢琴师说谎了，他当时并不是一个瞎子，结尾兔子意外出现救钢琴师一命的故事极有可能是假的，钢琴师应该最终与医生共同卖掉了西米的肝脏，并以此获利治好了自己的眼睛，故事也因为这个设定变得暗黑。</p><p>但是我们不妨进一步开脑洞，我们知道整个故事都是钢琴师对酒馆女的口述，既然结尾是假的，我们有理由去怀疑这整个故事都存在钢琴师的捏造。</p><p>钢琴师为了解释与酒馆女发生的种种误解，捏造了整个故事，同时我们有理由相信，只有酒馆女经历的情节和一些客观已发生的事情是真的，比如电视新闻里对于凶案的报道。钢琴师的所有谎言都需要围绕这些客观事实展开。</p><p>让我们先捋一下真实发生的情节有哪些：</p><p>1、酒馆女骑车不慎撞倒钢琴师从而认识了钢琴师；</p><p>2、钢琴师去酒馆女父亲的酒馆打工，从而结识了过气老影星；</p><p>3、钢琴师收了老影星的纸条，酒馆女问起，钢琴师说这是个秘密；</p><p>4、电视新闻播送老影星被杀的消息；</p><p>5、酒馆女与钢琴师相恋，在某段时间开始，遭遇钢琴师的古怪变化；</p><p>6、酒馆女接到钢琴师电话赶到钢琴师住处，却从在场的老影星妻子口中得知了二人的私情；</p><p>7、酒馆女从电视上得知老演员妻子与钢琴师一同失踪的消息，认为二人私奔了；</p><p>8、酒馆女与钢琴师在巴黎偶遇并口述了整个故事。</p><p>我们暂且抛开钢琴师口述的内容，从以上的客观事件出发试着把故事串起来。</p><p>钢琴师受老明星邀请前往西米住处表演弹琴，期间钢琴师与西米发生了不正当关系，这个时候谎称去外地却突然回家想给妻子惊喜的老明星正好撞破了二人的奸情，愤怒的老明星想用枪杀掉钢琴师却遭到了钢琴师的反杀（PS：印度持枪是合法的，所以即使没有警察逻辑也是通的）。钢琴师处理掉了老明星的尸体，同时卷走了1000万。在老明星的追悼仪式上，邻居太太企图将所知的实情告诉在场的警察，钢琴师得知后迅速下手杀害了邻居太太，而那个警察很有可能在收到线索后企图追查案件，最终也被钢琴师设计死在了电梯里。医生一家极有可能是钢琴师为了圆谎而编造出来的情节，最终在逃亡的途中二人发生矛盾钢琴师杀害了西米，焚烧了车辆毁掉尸体，然后逃到了法国。</p><p>所以，钢琴师从没瞎过，从钢琴师打飞易拉罐开始，故事就有了无限的可能性，这也是这部电影的成功之处。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;中国观众对于印度电影的接受程度，大部分限于励志类型的电影，它们大多数都是反映社会现状并且不断为之反抗并且获得胜利的故事，《三个傻瓜》战胜了体制化的教育，《摔跤吧爸爸》实现了被限制的女性个人价值，《厕所英雄》解放了被压抑的女性膀胱。《调音师》区别于一贯的中国观众对于印度电影的
      
    
    </summary>
    
      <category term="书影音" scheme="qmaolong.cn/categories/%E4%B9%A6%E5%BD%B1%E9%9F%B3/"/>
    
    
      <category term="调音师" scheme="qmaolong.cn/tags/%E8%B0%83%E9%9F%B3%E5%B8%88/"/>
    
      <category term="影评" scheme="qmaolong.cn/tags/%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
</feed>
